# -*- coding: utf-8 -*-
"""LVADSUSR169_nandini.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O5IomQ_Jfzle6w6qsg97rhwYpcTQoyGN
"""

#1
building ={}

while True:
  name = input("enter name or blank: ")
  if not name:
    break;
  width = float(input("enter the width in meters or leave blank:"))
  length = float(input("enter the length in meters:"))
  area = length*width
  building[name] = area

for name,value in building.items():
  if value < 100:
    print(f"{name}  is has small area {value}")
  elif value <200:
     print(f"{name}  is has medium area {value}")
  else:
     print(f"{name}  is has large area {value}")

#2

def tracking(bmi):
  if bmi < 20:
    return (f"take care you are under weight you need to take diet to put on weight your bmi is {bmi}")
  elif bmi<25:
    return (f"you are alright continue diet your bmi is {bmi}")
  else:
    return (f"take care you are over weight you need to take diet to loose weight your bmi is {bmi}")

while True:
  w = float(input("enter the weight: "))
  h = float(input("enter the height: "))
  bmi = (w/h**2)
  print(tracking(bmi))
  if input(print("enter y or n ")) == 'n':
    break

#3
s_dict = {}
while True:
  n = input("enter the number to choose the action 1 for add 2 for update 3 for printing:")
  if not n:
    break
  if n == '1':
    name = input("enter the name:")
    subject = input("enter the subject:")
    grade = input("enter the grade:")
    s_dict[name] = {subject:grade}
  elif n == '2':
    name = input("enter the name:")
    subject = input("enter the subject:")
    grade = input("enter the grade:")
    s_dict[name][subject] = grade
  else:
    print(s_dict)

#4
movie_kid = ["tom and jerry","cinderella"]
movie_teen =["minihiest","korean movie"]
movie_adult = ["all movie","desecd"]
movie_senior = ["hanuman","ramayana"]
tv_kid = ["tom and jerry","cinderella"]
tv_teen =["minihiest","korean movie"]
tv_adult = ["all movie","desecd"]
tv_senior = ["hanuman","ramayana"]

while True:
  n = int(input("enter the age or 0:"))
  if n == 09:
    break
  if n<10:
    print(f"{movie_kid} or {tv_kid} you can see")
  elif n<30:
    print(f"{movie_teen} or {tv_teen} you can see")
  elif n<40:
    print(f"{movie_adult} or {tv_adult} you can see")
  else:
    print(f"{movie_senior} or {tv_senior} you can see")

#5
list_ids = [1,2,3,4,5,6,7,8,9,10]
list_even = []
for i in list_ids:
  if i%2 == 0:
    list_even.append(i)

print(f"these are the even numbered id's {list_even} you can target")

#6
def encript(message,key):
  encripted = ""
  for char in message:
    encripted_char = chr(ord(char)^key)
    encripted += encripted_char
  return encripted

def decript(encripted_message,key):
  decripted = ""
  for char in encripted_message:
    decripted_char = chr(ord(char)^key)
    decripted += decripted_char
  return decripted

password = input("enter the password")
key = 62

encripted_password = encript(password,key)
print(encripted_password)
decripted_password = decript(encripted_password,key)
print(decripted_password)

#7
dict ={}
def customer_satisfaction():
  sum = 0
  len = 0
  for name, value in dict.items():
    sum+=value
    len+=1
  return sum/len

while True:
  name = input("enter the name or blank:")
  if not name:
    break
  score = int(input("enter the score out of 10 in int:"))
  dict[name] =score

if customer_satisfaction() < 5:
  print(f"the customers is not satified and rated {customer_satisfaction()}")
elif customer_satisfaction() < 8:
  print(f"the customers is moderately satified and rated {customer_satisfaction()}")
else:
  print(f"the customers is highly satified and rated {customer_satisfaction()}")

#8
def filter_comments(comments):
  for i in comments:
    count =0
    for j in i:
      if j.lower() == 'a' or  j.lower() == 'e'  or j.lower() == 'i' or j.lower() == 'o' or j.lower() == 'u':
        count+=1
    if count >= 5:
      comments.remove(i)
  return comments

comments =["nice","angle arna","abhaa good"]
print(filter_comments(comments))

#9

#10
balance = 0
while True:
  choice = int(input("enter the mode 1 for saving,2 for withdrwal"))
  if choice == 1:
    try:
      money = int(input("enter the money:"))
      balance += money
      if money <0:
        raise ValueError("invalid amount")
    except EValueError as e:
        print(e)
  if choice == 2:
    try:
      money =("enter the money:")
      if money <balance:
        raise ValueError("invalid amount entered")
      else:
        print("withdraw success")
    except ValueError as e:
      print(e)
  else:
    break

#11
name = input("enter the name:")
try:
  if type(name) != str:
    raise TypeError ("invalid data type")
  age = int(input("enter the age:"))
  if type(age) != str:
    raise TypeError ("invalid data type")
except TypeError as e:
  print(e)

#12
while True:
  result = 0
  num1 =int(input("enter the number :"))
  if num1 == 0:
    break
  num2 = int(input("enter the number"))
  try:
    result = num1/num2
  except ZeroDivisionError:
    print("not possible")
  print(result)

#13

#14

#15